/*******************************************************************************
 * Copyright (c) 2014-2015 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 ******************************************************************************/
package org.eclipse.scout.rt.ui.html;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Used to test path info and redirect capabilities of j2ee container
 * <p>
 * Result output per URL is as follows
 *
 * <pre>
 * http://localhost:8080/imo
 * 
 * RequestURI: '/imo'
 * RequestURL: 'http://localhost:8080/imo'
 * ServletContext.ContextPath: '/imo'
 * PathInfo: '/'
 * res/logo.jpg:  MISSING
 * 
 * 
 * http://localhost:8080/imo/
 * 
 * RequestURI: '/imo/'
 * RequestURL: 'http://localhost:8080/imo/'
 * ServletContext.ContextPath: '/imo'
 * PathInfo: '/'
 * res/logo.jpg:  OK
 * 
 * 
 * http://localhost:8080/imo/index.html
 * 
 * RequestURI: '/imo/index.html'
 * RequestURL: 'http://localhost:8080/imo/index.html'
 * ServletContext.ContextPath: '/imo'
 * PathInfo: '/index.html'
 * res/logo.jpg:  OK
 * </pre>
 */
public class PathInfoAnalysisServlet extends HttpServlet {
  private static final long serialVersionUID = 1L;
  private static final byte[] LOGO_JPG = new byte[]{-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 96, 0, 96, 0, 0, -1, -30, 2, 28, 73, 67, 67, 95, 80, 82, 79, 70, 73, 76, 69, 0, 1, 1, 0, 0, 2, 12, 108, 99, 109, 115, 2, 16, 0, 0,
      109, 110, 116, 114, 82, 71, 66, 32, 88, 89, 90, 32, 7, -36, 0, 1, 0, 25, 0, 3, 0, 41, 0, 57, 97, 99, 115, 112, 65, 80, 80, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, -42, 0, 1, 0, 0, 0, 0,
      -45, 45, 108, 99, 109, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 100, 101, 115, 99, 0, 0, 0, -4, 0, 0, 0, 94, 99, 112, 114,
      116, 0, 0, 1, 92, 0, 0, 0, 11, 119, 116, 112, 116, 0, 0, 1, 104, 0, 0, 0, 20, 98, 107, 112, 116, 0, 0, 1, 124, 0, 0, 0, 20, 114, 88, 89, 90, 0, 0, 1, -112, 0, 0, 0, 20, 103, 88, 89, 90, 0, 0, 1, -92, 0, 0, 0, 20, 98, 88, 89, 90, 0, 0,
      1, -72, 0, 0, 0, 20, 114, 84, 82, 67, 0, 0, 1, -52, 0, 0, 0, 64, 103, 84, 82, 67, 0, 0, 1, -52, 0, 0, 0, 64, 98, 84, 82, 67, 0, 0, 1, -52, 0, 0, 0, 64, 100, 101, 115, 99, 0, 0, 0, 0, 0, 0, 0, 3, 99, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 101, 120,
      116, 0, 0, 0, 0, 70, 66, 0, 0, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, -10, -42, 0, 1, 0, 0, 0, 0, -45, 45, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, 3, 22, 0, 0, 3, 51, 0, 0, 2, -92, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, 111, -94, 0, 0, 56, -11, 0, 0,
      3, -112, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, 98, -103, 0, 0, -73, -123, 0, 0, 24, -38, 88, 89, 90, 32, 0, 0, 0, 0, 0, 0, 36, -96, 0, 0, 15, -124, 0, 0, -74, -49, 99, 117, 114, 118, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, -53, 1, -55, 3, 99,
      5, -110, 8, 107, 11, -10, 16, 63, 21, 81, 27, 52, 33, -15, 41, -112, 50, 24, 59, -110, 70, 5, 81, 119, 93, -19, 107, 112, 122, 5, -119, -79, -102, 124, -84, 105, -65, 125, -45, -61, -23, 48, -1, -1, -1, -37, 0, 67, 0, 10, 7, 7, 9, 7,
      6, 10, 9, 8, 9, 11, 11, 10, 12, 15, 25, 16, 15, 14, 14, 15, 30, 22, 23, 18, 25, 36, 32, 38, 37, 35, 32, 35, 34, 40, 45, 57, 48, 40, 42, 54, 43, 34, 35, 50, 68, 50, 54, 59, 61, 64, 64, 64, 38, 48, 70, 75, 69, 62, 74, 57, 63, 64, 61,
      -1, -37, 0, 67, 1, 11, 11, 11, 15, 13, 15, 29, 16, 16, 29, 61, 41, 35, 41, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
      61, 61, 61, 61, 61, 61, 61, 61, 61, 61, -1, -64, 0, 17, 8, 0, 32, 0, 32, 3, 1, 34, 0, 2, 17, 1, 3, 17, 1, -1, -60, 0, 31, 0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -1, -60, 0, -75, 16, 0,
      2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125, 1, 2, 3, 0, 4, 17, 5, 18, 33, 49, 65, 6, 19, 81, 97, 7, 34, 113, 20, 50, -127, -111, -95, 8, 35, 66, -79, -63, 21, 82, -47, -16, 36, 51, 98, 114, -126, 9, 10, 22, 23, 24, 25, 26, 37, 38,
      39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, -125, -124, -123, -122, -121, -120, -119, -118,
      -110, -109, -108, -107, -106, -105, -104, -103, -102, -94, -93, -92, -91, -90, -89, -88, -87, -86, -78, -77, -76, -75, -74, -73, -72, -71, -70, -62, -61, -60, -59, -58, -57, -56, -55, -54, -46, -45, -44, -43, -42, -41, -40, -39, -38,
      -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -1, -60, 0, 31, 1, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -1, -60, 0, -75, 17, 0, 2, 1, 2,
      4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119, 0, 1, 2, 3, 17, 4, 5, 33, 49, 6, 18, 65, 81, 7, 97, 113, 19, 34, 50, -127, 8, 20, 66, -111, -95, -79, -63, 9, 35, 51, 82, -16, 21, 98, 114, -47, 10, 22, 36, 52, -31, 37, -15, 23, 24, 25, 26, 38,
      39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, -126, -125, -124, -123, -122, -121, -120, -119,
      -118, -110, -109, -108, -107, -106, -105, -104, -103, -102, -94, -93, -92, -91, -90, -89, -88, -87, -86, -78, -77, -76, -75, -74, -73, -72, -71, -70, -62, -61, -60, -59, -58, -57, -56, -55, -54, -46, -45, -44, -43, -42, -41, -40, -39,
      -38, -30, -29, -28, -27, -26, -25, -24, -23, -22, -14, -13, -12, -11, -10, -9, -8, -7, -6, -1, -38, 0, 12, 3, 1, 0, 2, 17, 3, 17, 0, 63, 0, -24, 93, -38, 71, 103, 118, 44, -52, 114, 73, -22, 77, 62, 11, 121, -82, 92, -84, 17, 60,
      -116, 58, -123, 25, -59, 71, 84, 124, 93, -88, 92, 89, 125, -105, 77, -74, -111, -30, -128, -64, -77, 74, 80, -32, -54, -51, -98, -89, -48, 99, -91, 124, -90, 91, -128, 120, -22, -82, 23, -78, 90, -77, -36, -52, -79, -15, -64, -47,
      -10, -106, -65, 68, 105, -49, 107, 61, -85, 5, -72, -119, -29, 39, -90, -31, -42, -94, 4, -126, 8, 56, 35, -67, 102, 120, 59, 80, -71, -72, -44, 14, -107, 60, -113, 45, -83, -62, 57, 10, -25, 62, 91, 5, 36, 48, -12, -23, -6, -42,
      -104, -23, 79, 51, -53, -34, 6, -94, -115, -18, -98, -60, -27, -103, -118, -57, -46, 115, -75, -102, -47, -105, 14, -111, 126, 24, -81, -39, 37, 56, 56, -56, 28, 85, 47, 21, -39, 15, -8, 71, 82, 93, 65, 4, 55, -106, -52, -79, -37,
      -110, -61, 116, -118, 79, 42, 71, -73, 92, -41, 31, 115, 123, 121, 44, -14, 25, -18, 110, 25, -53, 29, -37, -36, -25, 53, 88, -110, -57, 36, -110, 125, 77, 125, 78, 11, 37, -114, 18, -86, -85, 25, -65, 67, -27, 113, -39, -9, -42, -23,
      58, 50, -90, -67, 78, -77, -63, -81, 99, 21, -91, -21, -75, -43, -67, -66, -96, -40, -115, 30, -31, -10, -127, 25, -21, -76, -6, -42, -103, -105, 72, -123, -128, -72, -42, -19, 0, -18, 33, 13, 39, -14, 21, -25, -12, -75, -45, -118,
      -54, -88, 98, -86, 123, 74, -73, 127, 51, -105, 9, -100, -41, -62, 82, -10, 84, -110, -11, 63, -1, -39};

  public PathInfoAnalysisServlet() {
  }

  @Override
  protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String pathInfo = req.getPathInfo();
    if (pathInfo.equals("/res/logo.jpg")) {
      resp.setContentType("image/jpg");
      resp.setContentLength(LOGO_JPG.length);
      resp.getOutputStream().write(LOGO_JPG);
      return;
    }

    System.out.println("RequestURI: '" + req.getRequestURI() + "'");
    System.out.println("RequestURL: '" + req.getRequestURL() + "'");
    System.out.println("ServletContext.ContextPath: '" + getServletContext().getContextPath() + "'");
    System.out.println("PathInfo: '" + pathInfo + "'");

    if (req.getRequestURI().endsWith(getServletContext().getContextPath())) {
      String redirect = req.getRequestURI() + "/";
      System.out.println("### SEND REDIRECT TO " + redirect);
      resp.sendRedirect(redirect);
      return;
    }

    resp.setContentType("text/html");
    resp.getOutputStream().println("<html>");
    resp.getOutputStream().println("<body>");
    resp.getOutputStream().println("RequestURI: '" + req.getRequestURI() + "'<br/>");
    resp.getOutputStream().println("RequestURL: '" + req.getRequestURL() + "'<br/>");
    resp.getOutputStream().println("ServletContext.ContextPath: '" + getServletContext().getContextPath() + "'<br/>");
    resp.getOutputStream().println("PathInfo: '" + pathInfo + "'<br/>");
    resp.getOutputStream().println("res/logo.jpg: <img src=\"res/logo.jpg\">");
    resp.getOutputStream().println("</body>");
    resp.getOutputStream().println("</html>");
  }

}
